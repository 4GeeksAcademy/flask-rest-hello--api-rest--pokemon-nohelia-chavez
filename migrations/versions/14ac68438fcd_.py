"""empty message

Revision ID: 14ac68438fcd
Revises: b2f0bb567f60
Create Date: 2025-10-01 19:04:25.040438

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '14ac68438fcd'
down_revision = 'b2f0bb567f60'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('regions', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_regions_name'), ['name'], unique=True)

    op.create_table('pokemons',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('home_region_id', sa.Integer(), nullable=True),
    sa.Column('sprite_url', sa.String(length=255), nullable=True),
    sa.Column('base_experience', sa.Integer(), nullable=True),
    sa.Column('height_m', sa.Float(), nullable=True),
    sa.Column('weight_kg', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['home_region_id'], ['regions.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('pokemons', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_pokemons_home_region_id'), ['home_region_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_pokemons_name'), ['name'], unique=True)

    op.create_table('favorites',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('pokemon_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['pokemon_id'], ['pokemons.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_favorites_pokemon_id'), ['pokemon_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_favorites_region_id'), ['region_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_favorites_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.drop_index('ix_comments_post_id')
        batch_op.drop_index('ix_comments_user_id')

    op.drop_table('comments')
    with op.batch_alter_table('followers', schema=None) as batch_op:
        batch_op.drop_index('ix_followers_followed_id')
        batch_op.drop_index('ix_followers_follower_id')

    op.drop_table('followers')
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_index('ix_posts_user_id')

    op.drop_table('posts')
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.drop_index('ix_user_groups_group_id')
        batch_op.drop_index('ix_user_groups_user_id')

    op.drop_table('user_groups')
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.drop_index('ix_profiles_user_id')

    op.drop_table('profiles')
    op.drop_table('groups')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(length=50), nullable=False))
        batch_op.create_unique_constraint(None, ['username'])
        batch_op.drop_column('colection')
        batch_op.drop_column('balance')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('balance', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('colection', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_column('username')

    op.create_table('groups',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('groups_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='groups_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('profiles',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('birthday', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='profiles_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='profiles_pkey')
    )
    with op.batch_alter_table('profiles', schema=None) as batch_op:
        batch_op.create_index('ix_profiles_user_id', ['user_id'], unique=True)

    op.create_table('user_groups',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('group_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['groups.id'], name='user_groups_group_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_groups_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_groups_pkey')
    )
    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.create_index('ix_user_groups_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_user_groups_group_id', ['group_id'], unique=False)

    op.create_table('posts',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('posts_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='posts_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='posts_pkey'),
    postgresql_ignore_search_path=False
    )
    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.create_index('ix_posts_user_id', ['user_id'], unique=False)

    op.create_table('followers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('follower_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('followed_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['users.id'], name='followers_followed_id_fkey'),
    sa.ForeignKeyConstraint(['follower_id'], ['users.id'], name='followers_follower_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='followers_pkey'),
    sa.UniqueConstraint('follower_id', 'followed_id', name='uq_follow_pair')
    )
    with op.batch_alter_table('followers', schema=None) as batch_op:
        batch_op.create_index('ix_followers_follower_id', ['follower_id'], unique=False)
        batch_op.create_index('ix_followers_followed_id', ['followed_id'], unique=False)

    op.create_table('comments',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('post_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['post_id'], ['posts.id'], name='comments_post_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='comments_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='comments_pkey')
    )
    with op.batch_alter_table('comments', schema=None) as batch_op:
        batch_op.create_index('ix_comments_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_comments_post_id', ['post_id'], unique=False)

    with op.batch_alter_table('favorites', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_favorites_user_id'))
        batch_op.drop_index(batch_op.f('ix_favorites_region_id'))
        batch_op.drop_index(batch_op.f('ix_favorites_pokemon_id'))

    op.drop_table('favorites')
    with op.batch_alter_table('pokemons', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_pokemons_name'))
        batch_op.drop_index(batch_op.f('ix_pokemons_home_region_id'))

    op.drop_table('pokemons')
    with op.batch_alter_table('regions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_regions_name'))

    op.drop_table('regions')
    # ### end Alembic commands ###
